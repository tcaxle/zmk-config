/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define BASE 0
#define LOWER 1
#define RAISE 2
#define ADJUST 3

/ {
    // Activate ADJUST layer by pressing raise and lower

    left_encoder: encoder_left {
        compatible = "alps,ec11";
        label = "LEFT_ENCODER";
        a-gpios = <&pro_micro 21 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>;
        b-gpios = <&pro_micro 20 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>;
        steps = <80>;
    };

    right_encoder: encoder_right {
        compatible = "alps,ec11";
        label = "RIGHT_ENCODER";
        a-gpios = <&pro_micro 21 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>;
        b-gpios = <&pro_micro 20 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>;
        steps = <80>;
    };

    sensors {
        compatible = "zmk,keymap-sensors";
        sensors = <&left_encoder &right_encoder>;
        triggers-per-rotation = <20>;
    };

    conditional_layers { compatible = "zmk,conditional-layers"; };

    behaviors {
        mtd: mtd {
            compatible = "zmk,behavior-tap-dance";
            label = "Mod-Tap-Dance";
            #binding-cells = <0>;
            bindings = <&mo 2>, <&tog 3>;
        };

        shift_caps_l: shift_caps_l {
            compatible = "zmk,behavior-tap-dance";
            label = "SHIFT_CAPS_L";
            #binding-cells = <0>;
            bindings = <&kp LSHFT>, <&kp CAPS>;
        };

        shift_caps_r: shift_caps_r {
            compatible = "zmk,behavior-tap-dance";
            label = "SHIFT_CAPS_R";
            #binding-cells = <0>;
            bindings = <&kp RSHFT>, <&kp CAPS>;
        };

        hlt: hlt {
            compatible = "zmk,behavior-hold-tap";
            label = "HLT";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "hold-preferred";
            retro-tap;
        };

        th: th {
            compatible = "zmk,behavior-hold-tap";
            label = "TH";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <300>;
        };

        hbt: hbt {
            compatible = "zmk,behavior-hold-tap";
            label = "HBT";
            bindings = <&bt>, <&none>;

            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <300>;
        };
    };

    combos {
        compatible = "zmk,combos";

        qwerty {
            bindings = <&tog 4>;
            key-positions = <57 58 59>;
        };

        L_ENTER {
            bindings = <&kp ENTER>;
            key-positions = <14 15>;
        };

        R_SPACE {
            bindings = <&kp SPACE>;
            key-positions = <46 47>;
        };

        L_SPACE {
            bindings = <&kp SPACE>;
            key-positions = <38 39>;
        };

        R_ENTER {
            bindings = <&kp ENTER>;
            key-positions = <21 20>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base {
            label = "Base";

            // ------------------------------------------------------------------------------------------------------------
            // |   `   |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |       |
            // |  ESC  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   | BKSPC |
            // |  TAB  |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   |  MUTE  |  |       |  N   |  M    |  ,    |  .   |   /   | SHIFT |
            //               | GUI | ALT  | CTRL | LOWER|  ENTER |  | SPACE | RAISE| CTRL  | ALT   | GUI  |

            bindings = <
&th F12 ESCAPE  &th F1 N1  &th F2 N2  &th F3 N3     &th F4 N4  &th F5 N5                                  &th F6 N6  &th F7 N7  &th F8 N8      &th F9 N9          &th F10 N0  &th F11 MINUS
&kp TAB         &kp Q      &kp W      &kp F         &kp P      &kp G                                      &kp J      &kp L      &kp U          &kp Y              &kp SEMI    &kp GRAVE
&kp BSPC        &kp A      &kp R      &kp S         &kp T      &kp D                                      &kp H      &kp N      &kp E          &kp I              &kp O       &kp SINGLE_QUOTE
&shift_caps_l   &kp Z      &kp X      &kp C         &kp V      &kp B      &kp C_MUTE    &kp C_PLAY_PAUSE  &kp K      &kp M      &kp COMMA      &kp DOT            &kp FSLH    &shift_caps_r
                           &kp LCTRL  &kp LEFT_WIN  &kp LALT   &mtd       &mo 1         &mo 1             &mtd       &kp RALT   &kp RIGHT_WIN  &kp RIGHT_CONTROL
            >;

            sensor-bindings =
                <&inc_dec_kp C_VOL_DN C_VOLUME_UP>,
                <&inc_dec_kp K_SCROLL_DOWN K_SCROLL_UP>;
        };

        mirrored {
            bindings = <
&th F11 MINUS   &th F10 N0  &th F9 N9  &th F8 N8  &th F7 N7  &th F6 N6                                  &th F5 N5  &th F4 N4  &th F3 N3  &th F2 N2  &th F1 N1  &th F12 ESCAPE
&kp GRAVE       &kp SEMI    &kp Y      &kp U      &kp L      &kp J                                      &kp G      &kp P      &kp F      &kp W      &kp Q      &kp TAB
&kp SQT         &kp O       &kp I      &kp E      &kp N      &kp H                                      &kp D      &kp T      &kp S      &kp R      &kp A      &kp BSPC
&kp LEFT_SHIFT  &kp FSLH    &kp DOT    &kp COMMA  &kp M      &kp K      &kp C_PLAY_PAUSE    &kp C_MUTE  &kp B      &kp V      &kp C      &kp X      &kp Z      &kp RIGHT_SHIFT
                            &kp RCTRL  &kp RGUI   &kp RALT   &trans     &trans              &trans      &trans     &kp LALT   &kp LGUI   &kp LCTRL
            >;

            label = "Mirrored";
        };

        mod_a {
            bindings = <
&kp EQUAL        &kp LBKT          &kp RBKT       &trans         &trans         &trans                             &trans              &trans              &trans              &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp EQUAL
&kp NON_US_HASH  &hbt BT_DISC 0 0  &hbt BT_PRV 0  &hbt BT_CLR 0  &hbt BT_NXT 0  &hbt BT_SEL 0 0                    &mt F7 KP_NUMBER_7  &mt F8 KP_NUMBER_8  &mt F9 KP_NUMBER_9  &kp KP_ASTERISK   &kp KP_DIVIDE      &kp NON_US_HASH
&kp DELETE       &kp INS           &kp HOME       &kp UP         &kp END        &kp PG_UP                          &mt F4 KP_NUMBER_4  &mt F5 KP_NUMBER_5  &mt F6 KP_NUMBER_6  &kp KP_PLUS       &kp KP_MINUS       &kp BACKSPACE
&kp LSHIFT       &kp NUBS          &kp LEFT       &kp DOWN       &kp RIGHT      &kp PAGE_DOWN    &trans    &trans  &mt F1 KP_NUMBER_1  &mt F2 KP_NUMBER_2  &mt F3 KP_NUMBER_3  &kp KP_DOT        &kp KP_EQUAL       &kp RSHIFT
                                   &trans         &trans         &trans         &trans           &trans    &trans  &trans              &kp KP_NUMBER_0     &trans              &trans
            >;

            label = "Mod A";
        };

        mod_b {
            label = "Mod b";

            // TODO: Some binds are waiting for shifted keycode support.
            // ------------------------------------------------------------------------------------------------------------
            // |       |  F1 |  F2 |  F3  |  F4  |  F5  |                   |  F6  |  F7   |  F8   |  F9  |  F10  |  F11  |
            // |   `   |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |  F12  |
            // |       |  !  |  @  |  #   |  $   |  %   |                   |  ^   |  &    |  *    |  (   |   )   |   |   |
            // |       |  =  |  -  |  +   |  {   |  }   |        |  |       |  [   |  ]    |  ;    |  :   |   \   |       |
            //               |     |      |      |      |        |  |       |      |       |       |      |

            bindings = <
&kp EQUAL       &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &trans              &trans              &trans                                &trans           &trans         &trans         &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp EQUAL
&kp KP_NUMLOCK  &kp KP_DIVIDE     &kp KP_MULTIPLY    &mt F7 KP_NUMBER_7  &mt F8 KP_NUMBER_8  &mt F9 KP_NUMBER_9                    &hbt BT_SEL 0 0  &hbt BT_PRV 0  &hbt BT_CLR 0  &hbt BT_NXT 0     &hbt BT_DISC 0 0   &kp NON_US_HASH
&kp BACKSPACE   &kp KP_SUBTRACT   &kp KP_PLUS        &mt F4 KP_NUMBER_4  &mt F5 KP_NUMBER_5  &mt F6 KP_NUMBER_6                    &kp PG_UP        &kp HOME       &kp UP         &kp END           &kp INS            &kp DELETE
&kp LEFT_SHIFT  &kp KP_EQUAL      &kp KP_DOT         &mt F1 KP_NUMBER_1  &mt F2 KP_NUMBER_2  &mt F3 KP_NUMBER_3  &trans    &trans  &kp PAGE_DOWN    &kp LEFT       &kp DOWN       &kp RIGHT         &kp NUBS           &kp RIGHT_SHIFT
                                  &trans             &trans              &kp KP_N0           &tog 3              &trans    &trans  &tog 3           &trans         &trans         &trans
            >;
        };

        qwerty {
            bindings = <
&trans          &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans     &trans   &trans    &trans
&trans          &kp Q   &kp W   &kp E   &kp R   &kp T                     &kp Y   &kp U   &kp I      &kp O    &kp P     &trans
&trans          &kp A   &kp S   &kp D   &kp F   &kp G                     &kp H   &kp J   &kp K      &kp L    &kp SEMI  &trans
&kp LEFT_SHIFT  &kp Z   &kp X   &kp C   &kp V   &kp B   &trans    &trans  &kp N   &kp M   &kp COMMA  &kp DOT  &kp FSLH  &kp RIGHT_SHIFT
                        &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans     &trans
            >;

            label = "QWERTY";
        };
    };
};
